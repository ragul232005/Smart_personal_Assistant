import speech_recognition as sr
import pyttsx3
import wikipedia
import requests

# Initialize the text-to-speech engine
engine = pyttsx3.init()

def speak(text):
    """Speak the given text aloud."""
    engine.say(text)
    engine.runAndWait()

def listen():
    """Listen to user's voice and convert it to text."""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)

    try:
        command = recognizer.recognize_google(audio)
        print("You said:", command)
        return command.lower()
    except sr.UnknownValueError:
        speak("Sorry, I couldn't understand.")
        return ""
    except sr.RequestError:
        speak("Network error.")
        return ""

def get_weather(city="Chennai"):
    """Get weather information using OpenWeatherMap API."""
    api_key = "your_api_key_here"  # Replace with your API key from openweathermap.org
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
    try:
        response = requests.get(url)
        data = response.json()
        if data["cod"] == 200:
            temp = data["main"]["temp"]
            desc = data["weather"][0]["description"]
            result = f"The temperature in {city} is {temp} degrees Celsius with {desc}."
            speak(result)
        else:
            speak("I couldn't get the weather details.")
    except:
        speak("Failed to retrieve weather info.")

def process_command(command):
    """Process the command and perform actions."""
    if "hello" in command:
        speak("Hello! How can I help you?")

    elif "your name" in command:
        speak("I am your personal assistant.")

    elif "wikipedia" in command:
        topic = command.replace("wikipedia", "").strip()
        speak(f"Searching Wikipedia for {topic}")
        try:
            summary = wikipedia.summary(topic, sentences=2)
            speak(summary)
        except:
            speak("Sorry, I couldn't find information on that.")

    elif "weather" in command:
        get_weather()

    elif "bye" in command or "exit" in command:
        speak("Goodbye! Have a nice day.")
        exit()

    else:
        speak("I don't understand that command yet.")

# Run the assistant
if __name__ == "__main__":
    speak("Welcome! I am your voice assistant.")
    while True:
        command = listen()
        if command:
            process_command(command)
